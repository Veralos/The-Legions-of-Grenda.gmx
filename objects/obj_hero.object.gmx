<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_hero_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>has = false;
boomerang = true;
aim = 270;
throw_stop = 0;
priority_y = true;
sprite = spr_hero;
frame = 0;
walk = 0;
inv_time = 0;
flash = true;

sprite_stand[0] = spr_hero_right;
sprite_stand[1] = spr_hero_up;
sprite_stand[2] = spr_hero_left;
sprite_stand[3] = spr_hero;

sprite_walk[0] = spr_hero_walk_right;
sprite_walk[1] = spr_hero_walk_up;
sprite_walk[2] = spr_hero_walk_left;
sprite_walk[3] = spr_hero_walk;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_control.state == obj_control.state_type.base_state) {
    if (inv_time &gt; 0) {
        inv_time--;
        flash = !flash;
    }
    
    var speed_x = 0;
    var speed_y = 0;
    
    throw_stop--;
    if (throw_stop &lt;= 0) {
        if (keyboard_check(vk_left)) {
            speed_x--;
        }
        if (keyboard_check(vk_right)) {
            speed_x++;
        }
        if (keyboard_check(vk_up)) {
            speed_y--;
        }
        if (keyboard_check(vk_down)) {
            speed_y++;
        }
        
        if (keyboard_check_pressed(vk_left) || keyboard_check_pressed(vk_right)) {
            priority_y = false;
        }
        if (keyboard_check_pressed(vk_up) || keyboard_check_pressed(vk_down)) {
            priority_y = true;
        }
        
        if (speed_x != 0 ^^ speed_y != 0) {
            aim = point_direction(0, 0, speed_x, speed_y);
        }
        else if (speed_x !=0 &amp;&amp; speed_y != 0) {
            aim = point_direction(0, 0, speed_x * !priority_y, speed_y * priority_y);
        }
        
        if (speed_x !=0 || speed_y != 0) {
            var move_x = lengthdir_x(2, point_direction(0, 0, speed_x, speed_y));
            var move_y = lengthdir_y(2, point_direction(0, 0, speed_x, speed_y));
            
            with (obj_water) {
                solid = true;
            }
            
            if (place_free(x + move_x, y)) {
                x += lengthdir_x(2, point_direction(0, 0, speed_x, speed_y));
            }
            else {
                move_contact_solid(point_direction(0, 0, speed_x, 0), 2);
            }
            if (place_free(x, y + move_y)) {
                y += lengthdir_y(2, point_direction(0, 0, speed_x, speed_y));
            }
            else {
                move_contact_solid(point_direction(0, 0, 0, speed_y), 2);
            }
            
            with (obj_water) {
                solid = false;
            }
            
            scr_push_block(move_x, 0);
            scr_push_block(0, move_y);
            
            var lock = instance_place(x + move_x, y + move_y, obj_lock);
            if (lock != noone) {
                if (obj_control.keys[lock.image_index] &gt; 0) {
                    obj_control.keys[lock.image_index]--;
                    with (lock) {
                        instance_destroy();
                    }
                }
            }
        }
        
        if (has &amp;&amp; keyboard_check_pressed(ord('A')) &amp;&amp; boomerang) {
            audio_play_sound(snd_throw, 0, false);
            boomerang = false;
            throw = instance_create(x, y, obj_boomerang);
            throw.dir = aim;
            throw_stop = 15;
        }
    }
    
    if (speed_x != 0 || speed_y != 0) {
        sprite = sprite_walk[aim / 90];
        walk += 1/4;
        if (walk &gt;= 8) {
            walk -= 8;
        }
        frame = walk;
    }
    else {
        sprite = sprite_stand[aim / 90];
        frame = throw_stop &gt; 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_portal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_control) {
    audio_play_sound(snd_portal, 0, false);
    //hp = 5;
    obj_hero.x = obj_destination.x;
    obj_hero.y = obj_destination.y;
    place_xpos = (obj_hero.x div place_width) * place_width;
    place_ypos = (obj_hero.y div place_height) * place_height - 32;
    view_xview[0] = place_xpos;
    view_yview[0] = place_ypos;
    
    obj_hero.inv_time = 0;
    instance_deactivate_object(obj_resetme);
    instance_activate_region(view_xview[0], view_yview[0] + 32, view_wview[0], view_hview[0] - 32, true);
    ds_grid_set(map_grid, place_xpos div place_width, (place_ypos + 32) div place_height, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wanderer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inv_time &lt;= 0) {
    audio_play_sound(snd_hit, 0, false);
    obj_control.hp--;
    inv_time = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) {
    audio_play_sound(snd_get_key, 0, false);
    obj_control.keys[image_index]++;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flash) {
    if (has &amp;&amp; boomerang &amp;&amp; aim != 90) {
        draw_sprite(spr_boomerang, 0, round(x) + lengthdir_x(1, aim + 180), round(y) + lengthdir_y(1, aim + 180) - 1);
    }
    draw_sprite(sprite, frame, round(x), round(y));
    if (has &amp;&amp; boomerang &amp;&amp; aim == 90) {
        draw_sprite(spr_boomerang, 0, round(x) + lengthdir_x(1, aim + 180), round(y) + lengthdir_y(1, aim + 180) - 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
